{"version":3,"file":"index.mjs","sources":["../lib/entropy.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar digamma = require( '@stdlib/math-base-special-digamma' );\nvar gamma = require( '@stdlib/math-base-special-gamma' );\nvar ln = require( '@stdlib/math-base-special-ln' );\n\n\n// MAIN //\n\n/**\n* Returns the differential entropy of an inverse gamma distribution.\n*\n* @param {PositiveNumber} alpha - shape parameter\n* @param {PositiveNumber} beta - rate parameter\n* @returns {number} entropy\n*\n* @example\n* var v = entropy( 1.0, 1.0 );\n* // returns ~2.154\n*\n* @example\n* var v = entropy( 4.0, 12.0 );\n* // returns ~1.996\n*\n* @example\n* var v = entropy( 8.0, 2.0 );\n* // returns ~-0.922\n*\n* @example\n* var v = entropy( 1.0, -0.1 );\n* // returns NaN\n*\n* @example\n* var v = entropy( -0.1, 1.0 );\n* // returns NaN\n*\n* @example\n* var v = entropy( 2.0, NaN );\n* // returns NaN\n*\n* @example\n* var v = entropy( NaN, 2.0 );\n* // returns NaN\n*/\nfunction entropy( alpha, beta ) {\n\tvar out;\n\tif ( alpha <= 0.0 || beta <= 0.0 ) {\n\t\treturn NaN;\n\t}\n\tout = alpha + ln( beta*gamma( alpha ) );\n\tout -= ( 1.0+alpha ) * digamma( alpha );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = entropy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Inverse gamma distribution differential entropy.\n*\n* @module @stdlib/stats-base-dists-invgamma-entropy\n*\n* @example\n* var entropy = require( '@stdlib/stats-base-dists-invgamma-entropy' );\n*\n* var v = entropy( 1.0, 1.0 );\n* // returns ~2.154\n*\n* v = entropy( 4.0, 12.0 );\n* // returns ~1.996\n*\n* v = entropy( 8.0, 2.0 );\n* // returns ~-0.922\n*/\n\n// MODULES //\n\nvar entropy = require( './entropy.js' );\n\n\n// EXPORTS //\n\nmodule.exports = entropy;\n"],"names":["digamma","require$$0","gamma","require$$1","ln","require$$2","lib","alpha","beta","out","NaN"],"mappings":";;gRAsBA,IAAIA,EAAUC,EACVC,EAAQC,EACRC,EAAKC,EAqDT,IChCAC,EDmBA,SAAkBC,EAAOC,GACxB,IAAIC,EACJ,OAAKF,GAAS,GAAOC,GAAQ,EACrBE,KAERD,EAAMF,EAAQH,EAAII,EAAKN,EAAOK,IAC9BE,IAAS,EAAIF,GAAUP,EAASO"}